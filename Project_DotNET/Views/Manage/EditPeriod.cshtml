@model Project_DotNET.Models.EditPeriodViewModel

<h2>@Model.Title</h2>
<div>
    <h4>Informations générales</h4><br />
    <!-- handling message for direct access without model in controller-->
    @if (@Model.messagesInfo != null)
    {
        <div class="row">
            @Html.LabelFor(m => m.messagesInfo, new { @class = "col-md-4 text-info text-left" })

            @foreach (var msg in Model.messagesInfo)
                {
                @msg
                <br />
            }
        </div>
    }

    @if (@Model.messagesErrors != null)
    {
        <div class="row">
            @Html.LabelFor(m => m.messagesErrors, new { @class = "col-md-4 text-danger" })

            @foreach (var msg in Model.messagesErrors)
                {
                @msg
                <br />
            }
        </div>
    }
    <br />
    <div class="row">
        @Html.LabelFor(m => m.SelectedUser, new { @class = "col-md-2" })
        @Model.fullName
    </div>
    <div class="row">
        @Html.LabelFor(m => m.birthday, new { @class = "col-md-2" })
        @Model.birthday.ToString("dd MMM yyyy")
    </div>
 
    @using (Html.BeginForm("EditPeriod", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.SelectedUser)
        @Html.HiddenFor(m => m.periodId)
        @Html.HiddenFor(m => m.birthday)
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            <div class="form-group">
                @Html.LabelFor(m => m.Debut, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                @Html.TextBoxFor(m => m.Debut, new { @class = "form-control datepicker", @type = "date", @Value = Model.Debut.ToString("yyyy-MM-dd") })

                </div>
                @Html.ValidationMessageFor(m => m.Debut)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Fin, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Fin, new { @class = "form-control datepicker", @type = "date", @Value = Model.Fin.ToString("yyyy-MM-dd") })
                </div>
                @Html.ValidationMessageFor(m => m.Fin)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.SelectedJob, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.SelectedJob, new SelectList(Model.Jobs.Select(j => new SelectListItem() { Text = j.JobId.ToString(), Value = j.JobName }), "Text", "Value", Model.Jobs.First().JobId), "Selectionnez votre métier", new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.SelectedJob)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.SelectedCompany, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.SelectedCompany, new SelectList(Model.Companies.Select(c => new SelectListItem() { Text = c.CompanyId.ToString(), Value = c.CompanyName + ", " + c.city + ", " + c.country }),
                   "Text", "Value", Model.Companies.First().CompanyId), "Selectionnez votre entreprise", new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.SelectedCompany)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.NewRole, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.NewRole, new SelectList(Model.AvailableRole.Select(ar => new SelectListItem() { Value = ar.AvailableRoleName + ", " + ar.AvailableRoleDesc, Text = ar.AvailableRoleId.ToString() })
                   , "Text", "Value", Model.AvailableRole.First().AvailableRoleId), "Ajouter un nouveau rôle", new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.NewRole)
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Valider" />
                    <input type="reset" class="btn btn-default" value="Annuler" onclick="history.back();" />
                </div>
            </div>
        </div>
    }

    <div class="form-group">
        <div class="row">
            <div class="col-md-4 label-primary">Roles occupés</div>
            <div class="col-md-2 label-primary">Actions</div>
        </div>

        @if (@Model.AppRole != null)
        {
            foreach (var role in @Model.AppRole.AppRoles)
            {
                <div class="row">
                    <div class="col-md-4">
                        <span title="@role.AvailableRoleDesc">@role.AvailableRoleName</span>
                    </div>
                    <div class="col-md-2">
                        <button class="btn-primary" onclick="location.href='/Manage/deleteRole?RoleId=@role.AvailableRoleId&periodId=@Model.periodId&userId=@Model.SelectedUser'">Supprimer</button>
                    </div>
                </div>
            }
        }
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/modernizr");
    @Scripts.Render("~/bundles/jqueryui");
}